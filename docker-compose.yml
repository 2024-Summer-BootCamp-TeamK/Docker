version: '3'
services:
    django:
        build:
            context: ./Backend/myproject
        container_name: django
        command: python manage.py runserver 0:8000
        ports:
            - "8000:8000"
        restart: always
        depends_on:
            - mysqldb
        env_file:
            - .env
        volumes:
            - './Backend/myproject:/backend'
        networks:
            - app-tier

    mysqldb:
        image: mysql:latest
        env_file:
            - .env
        ports:
            - '3306:3306'
        volumes:
            - 'mysqldata:/var/lib/mysql'
        networks:
            - app-tier

    phpmyadmin:
        image: phpmyadmin
        restart: always
        links:
          - mysqldb
        ports:
          - 8080:80
        environment:
          PMA_ARBITRARY: 1
          PMA_HOST: mysqldb
          PMA_PORT: 3306
        networks:
          - app-tier

    redis:
      image: "redis:alpine"
      ports:
        - "6379:6379"
      networks:
        - app-tier

    rabbitmq:
      image: "rabbitmq:3-management"
      container_name: rabbitmq
      env_file:
        - .env
      ports:
        - "5672:5672"
        - "15672:15672"
      volumes:
        - rabbitmq_data:/var/lib/rabbitmq
      networks:
        - app-tier

    celery:
      build: ./Backend/myproject
      container_name: celery_worker
      command: celery -A myproject worker --loglevel=info --pool=prefork
      env_file:
        - .env
      depends_on:
        - rabbitmq
        - redis
        - mysqldb
      volumes:
        - './Backend/myproject:/backend'
      networks:
        - app-tier

volumes:
    mysqldata:
    rabbitmq_data:

networks:
    app-tier:
        driver: bridge
